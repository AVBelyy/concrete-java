stages:
  - build-unit-test
  - jars
  - deploy

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=/cache/.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  REGISTRY_RELEASE_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME

compile:
  stage: build-unit-test
  image: $CI_REGISTRY/research/coe-maven-centos:latest
  script:
    - mvn $MAVEN_CLI_OPTS clean test
  tags:
    - docker

install:
  stage: jars
  image: $CI_REGISTRY/research/coe-maven-centos:latest
  artifacts:
    expire_in: 1 day
    paths:
      - artifacts/
  script:
    - mkdir artifacts
    - mvn $MAVEN_CLI_OPTS install -DskipTests
    - find storers/executables/target -name "*uberjar*" -exec cp '{}' 'artifacts/store-uberjar.jar' \;
  tags:
    - docker

deploy:
  stage: deploy
  image: $CI_REGISTRY/research/coe-maven-centos:latest
  script:
    - mvn $MAVEN_CLI_OPTS clean javadoc:javadoc deploy -Pcoe
  tags:
    - docker
  only:
    - master

docker-storer-printer:
  stage: deploy
  image: docker:stable-git
  artifacts:
    paths:
      - artifacts/store-uberjar.jar
  script:
    - cd storers/executables/build/docker
    - cp artifacts/store-uberjar.jar .
    - docker build -t $REGISTRY_RELEASE_IMAGE -f printer.Dockerfile .
    - docker run --rm $REGISTRY_RELEASE_IMAGE ls -lvah /
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $REGISTRY_RELEASE_IMAGE
  tags:
    - shell
  only:
    - master
    - tags

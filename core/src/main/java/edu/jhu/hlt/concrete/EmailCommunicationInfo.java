/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package edu.jhu.hlt.concrete;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
/**
 * Extra information about an email communication instance.
 */
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)")
public class EmailCommunicationInfo implements org.apache.thrift.TBase<EmailCommunicationInfo, EmailCommunicationInfo._Fields>, java.io.Serializable, Cloneable, Comparable<EmailCommunicationInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EmailCommunicationInfo");

  private static final org.apache.thrift.protocol.TField MESSAGE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("messageId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CONTENT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("contentType", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField USER_AGENT_FIELD_DESC = new org.apache.thrift.protocol.TField("userAgent", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField IN_REPLY_TO_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("inReplyToList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField REFERENCE_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("referenceList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField SENDER_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("senderAddress", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField RETURN_PATH_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("returnPathAddress", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField TO_ADDRESS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("toAddressList", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField CC_ADDRESS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("ccAddressList", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField BCC_ADDRESS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("bccAddressList", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField EMAIL_FOLDER_FIELD_DESC = new org.apache.thrift.protocol.TField("emailFolder", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField SUBJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("subject", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField QUOTED_ADDRESSES_FIELD_DESC = new org.apache.thrift.protocol.TField("quotedAddresses", org.apache.thrift.protocol.TType.LIST, (short)13);
  private static final org.apache.thrift.protocol.TField ATTACHMENT_PATHS_FIELD_DESC = new org.apache.thrift.protocol.TField("attachmentPaths", org.apache.thrift.protocol.TType.LIST, (short)14);
  private static final org.apache.thrift.protocol.TField SALUTATION_FIELD_DESC = new org.apache.thrift.protocol.TField("salutation", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField SIGNATURE_FIELD_DESC = new org.apache.thrift.protocol.TField("signature", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new EmailCommunicationInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new EmailCommunicationInfoTupleSchemeFactory();

  private java.lang.String messageId; // optional
  private java.lang.String contentType; // optional
  private java.lang.String userAgent; // optional
  private java.util.List<java.lang.String> inReplyToList; // optional
  private java.util.List<java.lang.String> referenceList; // optional
  private EmailAddress senderAddress; // optional
  private EmailAddress returnPathAddress; // optional
  private java.util.List<EmailAddress> toAddressList; // optional
  private java.util.List<EmailAddress> ccAddressList; // optional
  private java.util.List<EmailAddress> bccAddressList; // optional
  private java.lang.String emailFolder; // optional
  private java.lang.String subject; // optional
  private java.util.List<java.lang.String> quotedAddresses; // optional
  private java.util.List<java.lang.String> attachmentPaths; // optional
  private java.lang.String salutation; // optional
  private java.lang.String signature; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MESSAGE_ID((short)1, "messageId"),
    CONTENT_TYPE((short)2, "contentType"),
    USER_AGENT((short)3, "userAgent"),
    IN_REPLY_TO_LIST((short)4, "inReplyToList"),
    REFERENCE_LIST((short)5, "referenceList"),
    SENDER_ADDRESS((short)6, "senderAddress"),
    RETURN_PATH_ADDRESS((short)7, "returnPathAddress"),
    TO_ADDRESS_LIST((short)8, "toAddressList"),
    CC_ADDRESS_LIST((short)9, "ccAddressList"),
    BCC_ADDRESS_LIST((short)10, "bccAddressList"),
    EMAIL_FOLDER((short)11, "emailFolder"),
    SUBJECT((short)12, "subject"),
    QUOTED_ADDRESSES((short)13, "quotedAddresses"),
    ATTACHMENT_PATHS((short)14, "attachmentPaths"),
    SALUTATION((short)15, "salutation"),
    SIGNATURE((short)16, "signature");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MESSAGE_ID
          return MESSAGE_ID;
        case 2: // CONTENT_TYPE
          return CONTENT_TYPE;
        case 3: // USER_AGENT
          return USER_AGENT;
        case 4: // IN_REPLY_TO_LIST
          return IN_REPLY_TO_LIST;
        case 5: // REFERENCE_LIST
          return REFERENCE_LIST;
        case 6: // SENDER_ADDRESS
          return SENDER_ADDRESS;
        case 7: // RETURN_PATH_ADDRESS
          return RETURN_PATH_ADDRESS;
        case 8: // TO_ADDRESS_LIST
          return TO_ADDRESS_LIST;
        case 9: // CC_ADDRESS_LIST
          return CC_ADDRESS_LIST;
        case 10: // BCC_ADDRESS_LIST
          return BCC_ADDRESS_LIST;
        case 11: // EMAIL_FOLDER
          return EMAIL_FOLDER;
        case 12: // SUBJECT
          return SUBJECT;
        case 13: // QUOTED_ADDRESSES
          return QUOTED_ADDRESSES;
        case 14: // ATTACHMENT_PATHS
          return ATTACHMENT_PATHS;
        case 15: // SALUTATION
          return SALUTATION;
        case 16: // SIGNATURE
          return SIGNATURE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.MESSAGE_ID,_Fields.CONTENT_TYPE,_Fields.USER_AGENT,_Fields.IN_REPLY_TO_LIST,_Fields.REFERENCE_LIST,_Fields.SENDER_ADDRESS,_Fields.RETURN_PATH_ADDRESS,_Fields.TO_ADDRESS_LIST,_Fields.CC_ADDRESS_LIST,_Fields.BCC_ADDRESS_LIST,_Fields.EMAIL_FOLDER,_Fields.SUBJECT,_Fields.QUOTED_ADDRESSES,_Fields.ATTACHMENT_PATHS,_Fields.SALUTATION,_Fields.SIGNATURE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MESSAGE_ID, new org.apache.thrift.meta_data.FieldMetaData("messageId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTENT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("contentType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_AGENT, new org.apache.thrift.meta_data.FieldMetaData("userAgent", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IN_REPLY_TO_LIST, new org.apache.thrift.meta_data.FieldMetaData("inReplyToList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.REFERENCE_LIST, new org.apache.thrift.meta_data.FieldMetaData("referenceList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.SENDER_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("senderAddress", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmailAddress.class)));
    tmpMap.put(_Fields.RETURN_PATH_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("returnPathAddress", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmailAddress.class)));
    tmpMap.put(_Fields.TO_ADDRESS_LIST, new org.apache.thrift.meta_data.FieldMetaData("toAddressList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmailAddress.class))));
    tmpMap.put(_Fields.CC_ADDRESS_LIST, new org.apache.thrift.meta_data.FieldMetaData("ccAddressList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmailAddress.class))));
    tmpMap.put(_Fields.BCC_ADDRESS_LIST, new org.apache.thrift.meta_data.FieldMetaData("bccAddressList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmailAddress.class))));
    tmpMap.put(_Fields.EMAIL_FOLDER, new org.apache.thrift.meta_data.FieldMetaData("emailFolder", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUBJECT, new org.apache.thrift.meta_data.FieldMetaData("subject", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUOTED_ADDRESSES, new org.apache.thrift.meta_data.FieldMetaData("quotedAddresses", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ATTACHMENT_PATHS, new org.apache.thrift.meta_data.FieldMetaData("attachmentPaths", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.SALUTATION, new org.apache.thrift.meta_data.FieldMetaData("salutation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIGNATURE, new org.apache.thrift.meta_data.FieldMetaData("signature", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EmailCommunicationInfo.class, metaDataMap);
  }

  public EmailCommunicationInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EmailCommunicationInfo(EmailCommunicationInfo other) {
    if (other.isSetMessageId()) {
      this.messageId = other.messageId;
    }
    if (other.isSetContentType()) {
      this.contentType = other.contentType;
    }
    if (other.isSetUserAgent()) {
      this.userAgent = other.userAgent;
    }
    if (other.isSetInReplyToList()) {
      java.util.List<java.lang.String> __this__inReplyToList = new java.util.ArrayList<java.lang.String>(other.inReplyToList);
      this.inReplyToList = __this__inReplyToList;
    }
    if (other.isSetReferenceList()) {
      java.util.List<java.lang.String> __this__referenceList = new java.util.ArrayList<java.lang.String>(other.referenceList);
      this.referenceList = __this__referenceList;
    }
    if (other.isSetSenderAddress()) {
      this.senderAddress = new EmailAddress(other.senderAddress);
    }
    if (other.isSetReturnPathAddress()) {
      this.returnPathAddress = new EmailAddress(other.returnPathAddress);
    }
    if (other.isSetToAddressList()) {
      java.util.List<EmailAddress> __this__toAddressList = new java.util.ArrayList<EmailAddress>(other.toAddressList.size());
      for (EmailAddress other_element : other.toAddressList) {
        __this__toAddressList.add(new EmailAddress(other_element));
      }
      this.toAddressList = __this__toAddressList;
    }
    if (other.isSetCcAddressList()) {
      java.util.List<EmailAddress> __this__ccAddressList = new java.util.ArrayList<EmailAddress>(other.ccAddressList.size());
      for (EmailAddress other_element : other.ccAddressList) {
        __this__ccAddressList.add(new EmailAddress(other_element));
      }
      this.ccAddressList = __this__ccAddressList;
    }
    if (other.isSetBccAddressList()) {
      java.util.List<EmailAddress> __this__bccAddressList = new java.util.ArrayList<EmailAddress>(other.bccAddressList.size());
      for (EmailAddress other_element : other.bccAddressList) {
        __this__bccAddressList.add(new EmailAddress(other_element));
      }
      this.bccAddressList = __this__bccAddressList;
    }
    if (other.isSetEmailFolder()) {
      this.emailFolder = other.emailFolder;
    }
    if (other.isSetSubject()) {
      this.subject = other.subject;
    }
    if (other.isSetQuotedAddresses()) {
      java.util.List<java.lang.String> __this__quotedAddresses = new java.util.ArrayList<java.lang.String>(other.quotedAddresses);
      this.quotedAddresses = __this__quotedAddresses;
    }
    if (other.isSetAttachmentPaths()) {
      java.util.List<java.lang.String> __this__attachmentPaths = new java.util.ArrayList<java.lang.String>(other.attachmentPaths);
      this.attachmentPaths = __this__attachmentPaths;
    }
    if (other.isSetSalutation()) {
      this.salutation = other.salutation;
    }
    if (other.isSetSignature()) {
      this.signature = other.signature;
    }
  }

  public EmailCommunicationInfo deepCopy() {
    return new EmailCommunicationInfo(this);
  }

  @Override
  public void clear() {
    this.messageId = null;
    this.contentType = null;
    this.userAgent = null;
    this.inReplyToList = null;
    this.referenceList = null;
    this.senderAddress = null;
    this.returnPathAddress = null;
    this.toAddressList = null;
    this.ccAddressList = null;
    this.bccAddressList = null;
    this.emailFolder = null;
    this.subject = null;
    this.quotedAddresses = null;
    this.attachmentPaths = null;
    this.salutation = null;
    this.signature = null;
  }

  public java.lang.String getMessageId() {
    return this.messageId;
  }

  public EmailCommunicationInfo setMessageId(java.lang.String messageId) {
    this.messageId = messageId;
    return this;
  }

  public void unsetMessageId() {
    this.messageId = null;
  }

  /** Returns true if field messageId is set (has been assigned a value) and false otherwise */
  public boolean isSetMessageId() {
    return this.messageId != null;
  }

  public void setMessageIdIsSet(boolean value) {
    if (!value) {
      this.messageId = null;
    }
  }

  public java.lang.String getContentType() {
    return this.contentType;
  }

  public EmailCommunicationInfo setContentType(java.lang.String contentType) {
    this.contentType = contentType;
    return this;
  }

  public void unsetContentType() {
    this.contentType = null;
  }

  /** Returns true if field contentType is set (has been assigned a value) and false otherwise */
  public boolean isSetContentType() {
    return this.contentType != null;
  }

  public void setContentTypeIsSet(boolean value) {
    if (!value) {
      this.contentType = null;
    }
  }

  public java.lang.String getUserAgent() {
    return this.userAgent;
  }

  public EmailCommunicationInfo setUserAgent(java.lang.String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  public void unsetUserAgent() {
    this.userAgent = null;
  }

  /** Returns true if field userAgent is set (has been assigned a value) and false otherwise */
  public boolean isSetUserAgent() {
    return this.userAgent != null;
  }

  public void setUserAgentIsSet(boolean value) {
    if (!value) {
      this.userAgent = null;
    }
  }

  public int getInReplyToListSize() {
    return (this.inReplyToList == null) ? 0 : this.inReplyToList.size();
  }

  public java.util.Iterator<java.lang.String> getInReplyToListIterator() {
    return (this.inReplyToList == null) ? null : this.inReplyToList.iterator();
  }

  public void addToInReplyToList(java.lang.String elem) {
    if (this.inReplyToList == null) {
      this.inReplyToList = new java.util.ArrayList<java.lang.String>();
    }
    this.inReplyToList.add(elem);
  }

  public java.util.List<java.lang.String> getInReplyToList() {
    return this.inReplyToList;
  }

  public EmailCommunicationInfo setInReplyToList(java.util.List<java.lang.String> inReplyToList) {
    this.inReplyToList = inReplyToList;
    return this;
  }

  public void unsetInReplyToList() {
    this.inReplyToList = null;
  }

  /** Returns true if field inReplyToList is set (has been assigned a value) and false otherwise */
  public boolean isSetInReplyToList() {
    return this.inReplyToList != null;
  }

  public void setInReplyToListIsSet(boolean value) {
    if (!value) {
      this.inReplyToList = null;
    }
  }

  public int getReferenceListSize() {
    return (this.referenceList == null) ? 0 : this.referenceList.size();
  }

  public java.util.Iterator<java.lang.String> getReferenceListIterator() {
    return (this.referenceList == null) ? null : this.referenceList.iterator();
  }

  public void addToReferenceList(java.lang.String elem) {
    if (this.referenceList == null) {
      this.referenceList = new java.util.ArrayList<java.lang.String>();
    }
    this.referenceList.add(elem);
  }

  public java.util.List<java.lang.String> getReferenceList() {
    return this.referenceList;
  }

  public EmailCommunicationInfo setReferenceList(java.util.List<java.lang.String> referenceList) {
    this.referenceList = referenceList;
    return this;
  }

  public void unsetReferenceList() {
    this.referenceList = null;
  }

  /** Returns true if field referenceList is set (has been assigned a value) and false otherwise */
  public boolean isSetReferenceList() {
    return this.referenceList != null;
  }

  public void setReferenceListIsSet(boolean value) {
    if (!value) {
      this.referenceList = null;
    }
  }

  public EmailAddress getSenderAddress() {
    return this.senderAddress;
  }

  public EmailCommunicationInfo setSenderAddress(EmailAddress senderAddress) {
    this.senderAddress = senderAddress;
    return this;
  }

  public void unsetSenderAddress() {
    this.senderAddress = null;
  }

  /** Returns true if field senderAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetSenderAddress() {
    return this.senderAddress != null;
  }

  public void setSenderAddressIsSet(boolean value) {
    if (!value) {
      this.senderAddress = null;
    }
  }

  public EmailAddress getReturnPathAddress() {
    return this.returnPathAddress;
  }

  public EmailCommunicationInfo setReturnPathAddress(EmailAddress returnPathAddress) {
    this.returnPathAddress = returnPathAddress;
    return this;
  }

  public void unsetReturnPathAddress() {
    this.returnPathAddress = null;
  }

  /** Returns true if field returnPathAddress is set (has been assigned a value) and false otherwise */
  public boolean isSetReturnPathAddress() {
    return this.returnPathAddress != null;
  }

  public void setReturnPathAddressIsSet(boolean value) {
    if (!value) {
      this.returnPathAddress = null;
    }
  }

  public int getToAddressListSize() {
    return (this.toAddressList == null) ? 0 : this.toAddressList.size();
  }

  public java.util.Iterator<EmailAddress> getToAddressListIterator() {
    return (this.toAddressList == null) ? null : this.toAddressList.iterator();
  }

  public void addToToAddressList(EmailAddress elem) {
    if (this.toAddressList == null) {
      this.toAddressList = new java.util.ArrayList<EmailAddress>();
    }
    this.toAddressList.add(elem);
  }

  public java.util.List<EmailAddress> getToAddressList() {
    return this.toAddressList;
  }

  public EmailCommunicationInfo setToAddressList(java.util.List<EmailAddress> toAddressList) {
    this.toAddressList = toAddressList;
    return this;
  }

  public void unsetToAddressList() {
    this.toAddressList = null;
  }

  /** Returns true if field toAddressList is set (has been assigned a value) and false otherwise */
  public boolean isSetToAddressList() {
    return this.toAddressList != null;
  }

  public void setToAddressListIsSet(boolean value) {
    if (!value) {
      this.toAddressList = null;
    }
  }

  public int getCcAddressListSize() {
    return (this.ccAddressList == null) ? 0 : this.ccAddressList.size();
  }

  public java.util.Iterator<EmailAddress> getCcAddressListIterator() {
    return (this.ccAddressList == null) ? null : this.ccAddressList.iterator();
  }

  public void addToCcAddressList(EmailAddress elem) {
    if (this.ccAddressList == null) {
      this.ccAddressList = new java.util.ArrayList<EmailAddress>();
    }
    this.ccAddressList.add(elem);
  }

  public java.util.List<EmailAddress> getCcAddressList() {
    return this.ccAddressList;
  }

  public EmailCommunicationInfo setCcAddressList(java.util.List<EmailAddress> ccAddressList) {
    this.ccAddressList = ccAddressList;
    return this;
  }

  public void unsetCcAddressList() {
    this.ccAddressList = null;
  }

  /** Returns true if field ccAddressList is set (has been assigned a value) and false otherwise */
  public boolean isSetCcAddressList() {
    return this.ccAddressList != null;
  }

  public void setCcAddressListIsSet(boolean value) {
    if (!value) {
      this.ccAddressList = null;
    }
  }

  public int getBccAddressListSize() {
    return (this.bccAddressList == null) ? 0 : this.bccAddressList.size();
  }

  public java.util.Iterator<EmailAddress> getBccAddressListIterator() {
    return (this.bccAddressList == null) ? null : this.bccAddressList.iterator();
  }

  public void addToBccAddressList(EmailAddress elem) {
    if (this.bccAddressList == null) {
      this.bccAddressList = new java.util.ArrayList<EmailAddress>();
    }
    this.bccAddressList.add(elem);
  }

  public java.util.List<EmailAddress> getBccAddressList() {
    return this.bccAddressList;
  }

  public EmailCommunicationInfo setBccAddressList(java.util.List<EmailAddress> bccAddressList) {
    this.bccAddressList = bccAddressList;
    return this;
  }

  public void unsetBccAddressList() {
    this.bccAddressList = null;
  }

  /** Returns true if field bccAddressList is set (has been assigned a value) and false otherwise */
  public boolean isSetBccAddressList() {
    return this.bccAddressList != null;
  }

  public void setBccAddressListIsSet(boolean value) {
    if (!value) {
      this.bccAddressList = null;
    }
  }

  public java.lang.String getEmailFolder() {
    return this.emailFolder;
  }

  public EmailCommunicationInfo setEmailFolder(java.lang.String emailFolder) {
    this.emailFolder = emailFolder;
    return this;
  }

  public void unsetEmailFolder() {
    this.emailFolder = null;
  }

  /** Returns true if field emailFolder is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailFolder() {
    return this.emailFolder != null;
  }

  public void setEmailFolderIsSet(boolean value) {
    if (!value) {
      this.emailFolder = null;
    }
  }

  public java.lang.String getSubject() {
    return this.subject;
  }

  public EmailCommunicationInfo setSubject(java.lang.String subject) {
    this.subject = subject;
    return this;
  }

  public void unsetSubject() {
    this.subject = null;
  }

  /** Returns true if field subject is set (has been assigned a value) and false otherwise */
  public boolean isSetSubject() {
    return this.subject != null;
  }

  public void setSubjectIsSet(boolean value) {
    if (!value) {
      this.subject = null;
    }
  }

  public int getQuotedAddressesSize() {
    return (this.quotedAddresses == null) ? 0 : this.quotedAddresses.size();
  }

  public java.util.Iterator<java.lang.String> getQuotedAddressesIterator() {
    return (this.quotedAddresses == null) ? null : this.quotedAddresses.iterator();
  }

  public void addToQuotedAddresses(java.lang.String elem) {
    if (this.quotedAddresses == null) {
      this.quotedAddresses = new java.util.ArrayList<java.lang.String>();
    }
    this.quotedAddresses.add(elem);
  }

  public java.util.List<java.lang.String> getQuotedAddresses() {
    return this.quotedAddresses;
  }

  public EmailCommunicationInfo setQuotedAddresses(java.util.List<java.lang.String> quotedAddresses) {
    this.quotedAddresses = quotedAddresses;
    return this;
  }

  public void unsetQuotedAddresses() {
    this.quotedAddresses = null;
  }

  /** Returns true if field quotedAddresses is set (has been assigned a value) and false otherwise */
  public boolean isSetQuotedAddresses() {
    return this.quotedAddresses != null;
  }

  public void setQuotedAddressesIsSet(boolean value) {
    if (!value) {
      this.quotedAddresses = null;
    }
  }

  public int getAttachmentPathsSize() {
    return (this.attachmentPaths == null) ? 0 : this.attachmentPaths.size();
  }

  public java.util.Iterator<java.lang.String> getAttachmentPathsIterator() {
    return (this.attachmentPaths == null) ? null : this.attachmentPaths.iterator();
  }

  public void addToAttachmentPaths(java.lang.String elem) {
    if (this.attachmentPaths == null) {
      this.attachmentPaths = new java.util.ArrayList<java.lang.String>();
    }
    this.attachmentPaths.add(elem);
  }

  public java.util.List<java.lang.String> getAttachmentPaths() {
    return this.attachmentPaths;
  }

  public EmailCommunicationInfo setAttachmentPaths(java.util.List<java.lang.String> attachmentPaths) {
    this.attachmentPaths = attachmentPaths;
    return this;
  }

  public void unsetAttachmentPaths() {
    this.attachmentPaths = null;
  }

  /** Returns true if field attachmentPaths is set (has been assigned a value) and false otherwise */
  public boolean isSetAttachmentPaths() {
    return this.attachmentPaths != null;
  }

  public void setAttachmentPathsIsSet(boolean value) {
    if (!value) {
      this.attachmentPaths = null;
    }
  }

  public java.lang.String getSalutation() {
    return this.salutation;
  }

  public EmailCommunicationInfo setSalutation(java.lang.String salutation) {
    this.salutation = salutation;
    return this;
  }

  public void unsetSalutation() {
    this.salutation = null;
  }

  /** Returns true if field salutation is set (has been assigned a value) and false otherwise */
  public boolean isSetSalutation() {
    return this.salutation != null;
  }

  public void setSalutationIsSet(boolean value) {
    if (!value) {
      this.salutation = null;
    }
  }

  public java.lang.String getSignature() {
    return this.signature;
  }

  public EmailCommunicationInfo setSignature(java.lang.String signature) {
    this.signature = signature;
    return this;
  }

  public void unsetSignature() {
    this.signature = null;
  }

  /** Returns true if field signature is set (has been assigned a value) and false otherwise */
  public boolean isSetSignature() {
    return this.signature != null;
  }

  public void setSignatureIsSet(boolean value) {
    if (!value) {
      this.signature = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case MESSAGE_ID:
      if (value == null) {
        unsetMessageId();
      } else {
        setMessageId((java.lang.String)value);
      }
      break;

    case CONTENT_TYPE:
      if (value == null) {
        unsetContentType();
      } else {
        setContentType((java.lang.String)value);
      }
      break;

    case USER_AGENT:
      if (value == null) {
        unsetUserAgent();
      } else {
        setUserAgent((java.lang.String)value);
      }
      break;

    case IN_REPLY_TO_LIST:
      if (value == null) {
        unsetInReplyToList();
      } else {
        setInReplyToList((java.util.List<java.lang.String>)value);
      }
      break;

    case REFERENCE_LIST:
      if (value == null) {
        unsetReferenceList();
      } else {
        setReferenceList((java.util.List<java.lang.String>)value);
      }
      break;

    case SENDER_ADDRESS:
      if (value == null) {
        unsetSenderAddress();
      } else {
        setSenderAddress((EmailAddress)value);
      }
      break;

    case RETURN_PATH_ADDRESS:
      if (value == null) {
        unsetReturnPathAddress();
      } else {
        setReturnPathAddress((EmailAddress)value);
      }
      break;

    case TO_ADDRESS_LIST:
      if (value == null) {
        unsetToAddressList();
      } else {
        setToAddressList((java.util.List<EmailAddress>)value);
      }
      break;

    case CC_ADDRESS_LIST:
      if (value == null) {
        unsetCcAddressList();
      } else {
        setCcAddressList((java.util.List<EmailAddress>)value);
      }
      break;

    case BCC_ADDRESS_LIST:
      if (value == null) {
        unsetBccAddressList();
      } else {
        setBccAddressList((java.util.List<EmailAddress>)value);
      }
      break;

    case EMAIL_FOLDER:
      if (value == null) {
        unsetEmailFolder();
      } else {
        setEmailFolder((java.lang.String)value);
      }
      break;

    case SUBJECT:
      if (value == null) {
        unsetSubject();
      } else {
        setSubject((java.lang.String)value);
      }
      break;

    case QUOTED_ADDRESSES:
      if (value == null) {
        unsetQuotedAddresses();
      } else {
        setQuotedAddresses((java.util.List<java.lang.String>)value);
      }
      break;

    case ATTACHMENT_PATHS:
      if (value == null) {
        unsetAttachmentPaths();
      } else {
        setAttachmentPaths((java.util.List<java.lang.String>)value);
      }
      break;

    case SALUTATION:
      if (value == null) {
        unsetSalutation();
      } else {
        setSalutation((java.lang.String)value);
      }
      break;

    case SIGNATURE:
      if (value == null) {
        unsetSignature();
      } else {
        setSignature((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case MESSAGE_ID:
      return getMessageId();

    case CONTENT_TYPE:
      return getContentType();

    case USER_AGENT:
      return getUserAgent();

    case IN_REPLY_TO_LIST:
      return getInReplyToList();

    case REFERENCE_LIST:
      return getReferenceList();

    case SENDER_ADDRESS:
      return getSenderAddress();

    case RETURN_PATH_ADDRESS:
      return getReturnPathAddress();

    case TO_ADDRESS_LIST:
      return getToAddressList();

    case CC_ADDRESS_LIST:
      return getCcAddressList();

    case BCC_ADDRESS_LIST:
      return getBccAddressList();

    case EMAIL_FOLDER:
      return getEmailFolder();

    case SUBJECT:
      return getSubject();

    case QUOTED_ADDRESSES:
      return getQuotedAddresses();

    case ATTACHMENT_PATHS:
      return getAttachmentPaths();

    case SALUTATION:
      return getSalutation();

    case SIGNATURE:
      return getSignature();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case MESSAGE_ID:
      return isSetMessageId();
    case CONTENT_TYPE:
      return isSetContentType();
    case USER_AGENT:
      return isSetUserAgent();
    case IN_REPLY_TO_LIST:
      return isSetInReplyToList();
    case REFERENCE_LIST:
      return isSetReferenceList();
    case SENDER_ADDRESS:
      return isSetSenderAddress();
    case RETURN_PATH_ADDRESS:
      return isSetReturnPathAddress();
    case TO_ADDRESS_LIST:
      return isSetToAddressList();
    case CC_ADDRESS_LIST:
      return isSetCcAddressList();
    case BCC_ADDRESS_LIST:
      return isSetBccAddressList();
    case EMAIL_FOLDER:
      return isSetEmailFolder();
    case SUBJECT:
      return isSetSubject();
    case QUOTED_ADDRESSES:
      return isSetQuotedAddresses();
    case ATTACHMENT_PATHS:
      return isSetAttachmentPaths();
    case SALUTATION:
      return isSetSalutation();
    case SIGNATURE:
      return isSetSignature();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof EmailCommunicationInfo)
      return this.equals((EmailCommunicationInfo)that);
    return false;
  }

  public boolean equals(EmailCommunicationInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_messageId = true && this.isSetMessageId();
    boolean that_present_messageId = true && that.isSetMessageId();
    if (this_present_messageId || that_present_messageId) {
      if (!(this_present_messageId && that_present_messageId))
        return false;
      if (!this.messageId.equals(that.messageId))
        return false;
    }

    boolean this_present_contentType = true && this.isSetContentType();
    boolean that_present_contentType = true && that.isSetContentType();
    if (this_present_contentType || that_present_contentType) {
      if (!(this_present_contentType && that_present_contentType))
        return false;
      if (!this.contentType.equals(that.contentType))
        return false;
    }

    boolean this_present_userAgent = true && this.isSetUserAgent();
    boolean that_present_userAgent = true && that.isSetUserAgent();
    if (this_present_userAgent || that_present_userAgent) {
      if (!(this_present_userAgent && that_present_userAgent))
        return false;
      if (!this.userAgent.equals(that.userAgent))
        return false;
    }

    boolean this_present_inReplyToList = true && this.isSetInReplyToList();
    boolean that_present_inReplyToList = true && that.isSetInReplyToList();
    if (this_present_inReplyToList || that_present_inReplyToList) {
      if (!(this_present_inReplyToList && that_present_inReplyToList))
        return false;
      if (!this.inReplyToList.equals(that.inReplyToList))
        return false;
    }

    boolean this_present_referenceList = true && this.isSetReferenceList();
    boolean that_present_referenceList = true && that.isSetReferenceList();
    if (this_present_referenceList || that_present_referenceList) {
      if (!(this_present_referenceList && that_present_referenceList))
        return false;
      if (!this.referenceList.equals(that.referenceList))
        return false;
    }

    boolean this_present_senderAddress = true && this.isSetSenderAddress();
    boolean that_present_senderAddress = true && that.isSetSenderAddress();
    if (this_present_senderAddress || that_present_senderAddress) {
      if (!(this_present_senderAddress && that_present_senderAddress))
        return false;
      if (!this.senderAddress.equals(that.senderAddress))
        return false;
    }

    boolean this_present_returnPathAddress = true && this.isSetReturnPathAddress();
    boolean that_present_returnPathAddress = true && that.isSetReturnPathAddress();
    if (this_present_returnPathAddress || that_present_returnPathAddress) {
      if (!(this_present_returnPathAddress && that_present_returnPathAddress))
        return false;
      if (!this.returnPathAddress.equals(that.returnPathAddress))
        return false;
    }

    boolean this_present_toAddressList = true && this.isSetToAddressList();
    boolean that_present_toAddressList = true && that.isSetToAddressList();
    if (this_present_toAddressList || that_present_toAddressList) {
      if (!(this_present_toAddressList && that_present_toAddressList))
        return false;
      if (!this.toAddressList.equals(that.toAddressList))
        return false;
    }

    boolean this_present_ccAddressList = true && this.isSetCcAddressList();
    boolean that_present_ccAddressList = true && that.isSetCcAddressList();
    if (this_present_ccAddressList || that_present_ccAddressList) {
      if (!(this_present_ccAddressList && that_present_ccAddressList))
        return false;
      if (!this.ccAddressList.equals(that.ccAddressList))
        return false;
    }

    boolean this_present_bccAddressList = true && this.isSetBccAddressList();
    boolean that_present_bccAddressList = true && that.isSetBccAddressList();
    if (this_present_bccAddressList || that_present_bccAddressList) {
      if (!(this_present_bccAddressList && that_present_bccAddressList))
        return false;
      if (!this.bccAddressList.equals(that.bccAddressList))
        return false;
    }

    boolean this_present_emailFolder = true && this.isSetEmailFolder();
    boolean that_present_emailFolder = true && that.isSetEmailFolder();
    if (this_present_emailFolder || that_present_emailFolder) {
      if (!(this_present_emailFolder && that_present_emailFolder))
        return false;
      if (!this.emailFolder.equals(that.emailFolder))
        return false;
    }

    boolean this_present_subject = true && this.isSetSubject();
    boolean that_present_subject = true && that.isSetSubject();
    if (this_present_subject || that_present_subject) {
      if (!(this_present_subject && that_present_subject))
        return false;
      if (!this.subject.equals(that.subject))
        return false;
    }

    boolean this_present_quotedAddresses = true && this.isSetQuotedAddresses();
    boolean that_present_quotedAddresses = true && that.isSetQuotedAddresses();
    if (this_present_quotedAddresses || that_present_quotedAddresses) {
      if (!(this_present_quotedAddresses && that_present_quotedAddresses))
        return false;
      if (!this.quotedAddresses.equals(that.quotedAddresses))
        return false;
    }

    boolean this_present_attachmentPaths = true && this.isSetAttachmentPaths();
    boolean that_present_attachmentPaths = true && that.isSetAttachmentPaths();
    if (this_present_attachmentPaths || that_present_attachmentPaths) {
      if (!(this_present_attachmentPaths && that_present_attachmentPaths))
        return false;
      if (!this.attachmentPaths.equals(that.attachmentPaths))
        return false;
    }

    boolean this_present_salutation = true && this.isSetSalutation();
    boolean that_present_salutation = true && that.isSetSalutation();
    if (this_present_salutation || that_present_salutation) {
      if (!(this_present_salutation && that_present_salutation))
        return false;
      if (!this.salutation.equals(that.salutation))
        return false;
    }

    boolean this_present_signature = true && this.isSetSignature();
    boolean that_present_signature = true && that.isSetSignature();
    if (this_present_signature || that_present_signature) {
      if (!(this_present_signature && that_present_signature))
        return false;
      if (!this.signature.equals(that.signature))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMessageId()) ? 131071 : 524287);
    if (isSetMessageId())
      hashCode = hashCode * 8191 + messageId.hashCode();

    hashCode = hashCode * 8191 + ((isSetContentType()) ? 131071 : 524287);
    if (isSetContentType())
      hashCode = hashCode * 8191 + contentType.hashCode();

    hashCode = hashCode * 8191 + ((isSetUserAgent()) ? 131071 : 524287);
    if (isSetUserAgent())
      hashCode = hashCode * 8191 + userAgent.hashCode();

    hashCode = hashCode * 8191 + ((isSetInReplyToList()) ? 131071 : 524287);
    if (isSetInReplyToList())
      hashCode = hashCode * 8191 + inReplyToList.hashCode();

    hashCode = hashCode * 8191 + ((isSetReferenceList()) ? 131071 : 524287);
    if (isSetReferenceList())
      hashCode = hashCode * 8191 + referenceList.hashCode();

    hashCode = hashCode * 8191 + ((isSetSenderAddress()) ? 131071 : 524287);
    if (isSetSenderAddress())
      hashCode = hashCode * 8191 + senderAddress.hashCode();

    hashCode = hashCode * 8191 + ((isSetReturnPathAddress()) ? 131071 : 524287);
    if (isSetReturnPathAddress())
      hashCode = hashCode * 8191 + returnPathAddress.hashCode();

    hashCode = hashCode * 8191 + ((isSetToAddressList()) ? 131071 : 524287);
    if (isSetToAddressList())
      hashCode = hashCode * 8191 + toAddressList.hashCode();

    hashCode = hashCode * 8191 + ((isSetCcAddressList()) ? 131071 : 524287);
    if (isSetCcAddressList())
      hashCode = hashCode * 8191 + ccAddressList.hashCode();

    hashCode = hashCode * 8191 + ((isSetBccAddressList()) ? 131071 : 524287);
    if (isSetBccAddressList())
      hashCode = hashCode * 8191 + bccAddressList.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmailFolder()) ? 131071 : 524287);
    if (isSetEmailFolder())
      hashCode = hashCode * 8191 + emailFolder.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubject()) ? 131071 : 524287);
    if (isSetSubject())
      hashCode = hashCode * 8191 + subject.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuotedAddresses()) ? 131071 : 524287);
    if (isSetQuotedAddresses())
      hashCode = hashCode * 8191 + quotedAddresses.hashCode();

    hashCode = hashCode * 8191 + ((isSetAttachmentPaths()) ? 131071 : 524287);
    if (isSetAttachmentPaths())
      hashCode = hashCode * 8191 + attachmentPaths.hashCode();

    hashCode = hashCode * 8191 + ((isSetSalutation()) ? 131071 : 524287);
    if (isSetSalutation())
      hashCode = hashCode * 8191 + salutation.hashCode();

    hashCode = hashCode * 8191 + ((isSetSignature()) ? 131071 : 524287);
    if (isSetSignature())
      hashCode = hashCode * 8191 + signature.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(EmailCommunicationInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetMessageId()).compareTo(other.isSetMessageId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessageId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageId, other.messageId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetContentType()).compareTo(other.isSetContentType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContentType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contentType, other.contentType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUserAgent()).compareTo(other.isSetUserAgent());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserAgent()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userAgent, other.userAgent);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetInReplyToList()).compareTo(other.isSetInReplyToList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInReplyToList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inReplyToList, other.inReplyToList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReferenceList()).compareTo(other.isSetReferenceList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReferenceList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.referenceList, other.referenceList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSenderAddress()).compareTo(other.isSetSenderAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSenderAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.senderAddress, other.senderAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReturnPathAddress()).compareTo(other.isSetReturnPathAddress());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturnPathAddress()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.returnPathAddress, other.returnPathAddress);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetToAddressList()).compareTo(other.isSetToAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetToAddressList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.toAddressList, other.toAddressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCcAddressList()).compareTo(other.isSetCcAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCcAddressList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ccAddressList, other.ccAddressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBccAddressList()).compareTo(other.isSetBccAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBccAddressList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bccAddressList, other.bccAddressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmailFolder()).compareTo(other.isSetEmailFolder());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailFolder()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailFolder, other.emailFolder);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubject()).compareTo(other.isSetSubject());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubject()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subject, other.subject);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetQuotedAddresses()).compareTo(other.isSetQuotedAddresses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuotedAddresses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quotedAddresses, other.quotedAddresses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAttachmentPaths()).compareTo(other.isSetAttachmentPaths());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttachmentPaths()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attachmentPaths, other.attachmentPaths);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSalutation()).compareTo(other.isSetSalutation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSalutation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.salutation, other.salutation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSignature()).compareTo(other.isSetSignature());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSignature()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.signature, other.signature);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("EmailCommunicationInfo(");
    boolean first = true;

    if (isSetMessageId()) {
      sb.append("messageId:");
      if (this.messageId == null) {
        sb.append("null");
      } else {
        sb.append(this.messageId);
      }
      first = false;
    }
    if (isSetContentType()) {
      if (!first) sb.append(", ");
      sb.append("contentType:");
      if (this.contentType == null) {
        sb.append("null");
      } else {
        sb.append(this.contentType);
      }
      first = false;
    }
    if (isSetUserAgent()) {
      if (!first) sb.append(", ");
      sb.append("userAgent:");
      if (this.userAgent == null) {
        sb.append("null");
      } else {
        sb.append(this.userAgent);
      }
      first = false;
    }
    if (isSetInReplyToList()) {
      if (!first) sb.append(", ");
      sb.append("inReplyToList:");
      if (this.inReplyToList == null) {
        sb.append("null");
      } else {
        sb.append(this.inReplyToList);
      }
      first = false;
    }
    if (isSetReferenceList()) {
      if (!first) sb.append(", ");
      sb.append("referenceList:");
      if (this.referenceList == null) {
        sb.append("null");
      } else {
        sb.append(this.referenceList);
      }
      first = false;
    }
    if (isSetSenderAddress()) {
      if (!first) sb.append(", ");
      sb.append("senderAddress:");
      if (this.senderAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.senderAddress);
      }
      first = false;
    }
    if (isSetReturnPathAddress()) {
      if (!first) sb.append(", ");
      sb.append("returnPathAddress:");
      if (this.returnPathAddress == null) {
        sb.append("null");
      } else {
        sb.append(this.returnPathAddress);
      }
      first = false;
    }
    if (isSetToAddressList()) {
      if (!first) sb.append(", ");
      sb.append("toAddressList:");
      if (this.toAddressList == null) {
        sb.append("null");
      } else {
        sb.append(this.toAddressList);
      }
      first = false;
    }
    if (isSetCcAddressList()) {
      if (!first) sb.append(", ");
      sb.append("ccAddressList:");
      if (this.ccAddressList == null) {
        sb.append("null");
      } else {
        sb.append(this.ccAddressList);
      }
      first = false;
    }
    if (isSetBccAddressList()) {
      if (!first) sb.append(", ");
      sb.append("bccAddressList:");
      if (this.bccAddressList == null) {
        sb.append("null");
      } else {
        sb.append(this.bccAddressList);
      }
      first = false;
    }
    if (isSetEmailFolder()) {
      if (!first) sb.append(", ");
      sb.append("emailFolder:");
      if (this.emailFolder == null) {
        sb.append("null");
      } else {
        sb.append(this.emailFolder);
      }
      first = false;
    }
    if (isSetSubject()) {
      if (!first) sb.append(", ");
      sb.append("subject:");
      if (this.subject == null) {
        sb.append("null");
      } else {
        sb.append(this.subject);
      }
      first = false;
    }
    if (isSetQuotedAddresses()) {
      if (!first) sb.append(", ");
      sb.append("quotedAddresses:");
      if (this.quotedAddresses == null) {
        sb.append("null");
      } else {
        sb.append(this.quotedAddresses);
      }
      first = false;
    }
    if (isSetAttachmentPaths()) {
      if (!first) sb.append(", ");
      sb.append("attachmentPaths:");
      if (this.attachmentPaths == null) {
        sb.append("null");
      } else {
        sb.append(this.attachmentPaths);
      }
      first = false;
    }
    if (isSetSalutation()) {
      if (!first) sb.append(", ");
      sb.append("salutation:");
      if (this.salutation == null) {
        sb.append("null");
      } else {
        sb.append(this.salutation);
      }
      first = false;
    }
    if (isSetSignature()) {
      if (!first) sb.append(", ");
      sb.append("signature:");
      if (this.signature == null) {
        sb.append("null");
      } else {
        sb.append(this.signature);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (senderAddress != null) {
      senderAddress.validate();
    }
    if (returnPathAddress != null) {
      returnPathAddress.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EmailCommunicationInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public EmailCommunicationInfoStandardScheme getScheme() {
      return new EmailCommunicationInfoStandardScheme();
    }
  }

  private static class EmailCommunicationInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<EmailCommunicationInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EmailCommunicationInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MESSAGE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.messageId = iprot.readString();
              struct.setMessageIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONTENT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contentType = iprot.readString();
              struct.setContentTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USER_AGENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userAgent = iprot.readString();
              struct.setUserAgentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // IN_REPLY_TO_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.inReplyToList = new java.util.ArrayList<java.lang.String>(_list0.size);
                java.lang.String _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readString();
                  struct.inReplyToList.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setInReplyToListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REFERENCE_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.referenceList = new java.util.ArrayList<java.lang.String>(_list3.size);
                java.lang.String _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readString();
                  struct.referenceList.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setReferenceListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SENDER_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.senderAddress = new EmailAddress();
              struct.senderAddress.read(iprot);
              struct.setSenderAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // RETURN_PATH_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.returnPathAddress = new EmailAddress();
              struct.returnPathAddress.read(iprot);
              struct.setReturnPathAddressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TO_ADDRESS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.toAddressList = new java.util.ArrayList<EmailAddress>(_list6.size);
                EmailAddress _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = new EmailAddress();
                  _elem7.read(iprot);
                  struct.toAddressList.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setToAddressListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CC_ADDRESS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.ccAddressList = new java.util.ArrayList<EmailAddress>(_list9.size);
                EmailAddress _elem10;
                for (int _i11 = 0; _i11 < _list9.size; ++_i11)
                {
                  _elem10 = new EmailAddress();
                  _elem10.read(iprot);
                  struct.ccAddressList.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setCcAddressListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BCC_ADDRESS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.bccAddressList = new java.util.ArrayList<EmailAddress>(_list12.size);
                EmailAddress _elem13;
                for (int _i14 = 0; _i14 < _list12.size; ++_i14)
                {
                  _elem13 = new EmailAddress();
                  _elem13.read(iprot);
                  struct.bccAddressList.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setBccAddressListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // EMAIL_FOLDER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailFolder = iprot.readString();
              struct.setEmailFolderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // SUBJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.subject = iprot.readString();
              struct.setSubjectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // QUOTED_ADDRESSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list15 = iprot.readListBegin();
                struct.quotedAddresses = new java.util.ArrayList<java.lang.String>(_list15.size);
                java.lang.String _elem16;
                for (int _i17 = 0; _i17 < _list15.size; ++_i17)
                {
                  _elem16 = iprot.readString();
                  struct.quotedAddresses.add(_elem16);
                }
                iprot.readListEnd();
              }
              struct.setQuotedAddressesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ATTACHMENT_PATHS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list18 = iprot.readListBegin();
                struct.attachmentPaths = new java.util.ArrayList<java.lang.String>(_list18.size);
                java.lang.String _elem19;
                for (int _i20 = 0; _i20 < _list18.size; ++_i20)
                {
                  _elem19 = iprot.readString();
                  struct.attachmentPaths.add(_elem19);
                }
                iprot.readListEnd();
              }
              struct.setAttachmentPathsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // SALUTATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.salutation = iprot.readString();
              struct.setSalutationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SIGNATURE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.signature = iprot.readString();
              struct.setSignatureIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EmailCommunicationInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.messageId != null) {
        if (struct.isSetMessageId()) {
          oprot.writeFieldBegin(MESSAGE_ID_FIELD_DESC);
          oprot.writeString(struct.messageId);
          oprot.writeFieldEnd();
        }
      }
      if (struct.contentType != null) {
        if (struct.isSetContentType()) {
          oprot.writeFieldBegin(CONTENT_TYPE_FIELD_DESC);
          oprot.writeString(struct.contentType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.userAgent != null) {
        if (struct.isSetUserAgent()) {
          oprot.writeFieldBegin(USER_AGENT_FIELD_DESC);
          oprot.writeString(struct.userAgent);
          oprot.writeFieldEnd();
        }
      }
      if (struct.inReplyToList != null) {
        if (struct.isSetInReplyToList()) {
          oprot.writeFieldBegin(IN_REPLY_TO_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.inReplyToList.size()));
            for (java.lang.String _iter21 : struct.inReplyToList)
            {
              oprot.writeString(_iter21);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.referenceList != null) {
        if (struct.isSetReferenceList()) {
          oprot.writeFieldBegin(REFERENCE_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.referenceList.size()));
            for (java.lang.String _iter22 : struct.referenceList)
            {
              oprot.writeString(_iter22);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.senderAddress != null) {
        if (struct.isSetSenderAddress()) {
          oprot.writeFieldBegin(SENDER_ADDRESS_FIELD_DESC);
          struct.senderAddress.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.returnPathAddress != null) {
        if (struct.isSetReturnPathAddress()) {
          oprot.writeFieldBegin(RETURN_PATH_ADDRESS_FIELD_DESC);
          struct.returnPathAddress.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.toAddressList != null) {
        if (struct.isSetToAddressList()) {
          oprot.writeFieldBegin(TO_ADDRESS_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.toAddressList.size()));
            for (EmailAddress _iter23 : struct.toAddressList)
            {
              _iter23.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.ccAddressList != null) {
        if (struct.isSetCcAddressList()) {
          oprot.writeFieldBegin(CC_ADDRESS_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.ccAddressList.size()));
            for (EmailAddress _iter24 : struct.ccAddressList)
            {
              _iter24.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.bccAddressList != null) {
        if (struct.isSetBccAddressList()) {
          oprot.writeFieldBegin(BCC_ADDRESS_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.bccAddressList.size()));
            for (EmailAddress _iter25 : struct.bccAddressList)
            {
              _iter25.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.emailFolder != null) {
        if (struct.isSetEmailFolder()) {
          oprot.writeFieldBegin(EMAIL_FOLDER_FIELD_DESC);
          oprot.writeString(struct.emailFolder);
          oprot.writeFieldEnd();
        }
      }
      if (struct.subject != null) {
        if (struct.isSetSubject()) {
          oprot.writeFieldBegin(SUBJECT_FIELD_DESC);
          oprot.writeString(struct.subject);
          oprot.writeFieldEnd();
        }
      }
      if (struct.quotedAddresses != null) {
        if (struct.isSetQuotedAddresses()) {
          oprot.writeFieldBegin(QUOTED_ADDRESSES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.quotedAddresses.size()));
            for (java.lang.String _iter26 : struct.quotedAddresses)
            {
              oprot.writeString(_iter26);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.attachmentPaths != null) {
        if (struct.isSetAttachmentPaths()) {
          oprot.writeFieldBegin(ATTACHMENT_PATHS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.attachmentPaths.size()));
            for (java.lang.String _iter27 : struct.attachmentPaths)
            {
              oprot.writeString(_iter27);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.salutation != null) {
        if (struct.isSetSalutation()) {
          oprot.writeFieldBegin(SALUTATION_FIELD_DESC);
          oprot.writeString(struct.salutation);
          oprot.writeFieldEnd();
        }
      }
      if (struct.signature != null) {
        if (struct.isSetSignature()) {
          oprot.writeFieldBegin(SIGNATURE_FIELD_DESC);
          oprot.writeString(struct.signature);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EmailCommunicationInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public EmailCommunicationInfoTupleScheme getScheme() {
      return new EmailCommunicationInfoTupleScheme();
    }
  }

  private static class EmailCommunicationInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<EmailCommunicationInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EmailCommunicationInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMessageId()) {
        optionals.set(0);
      }
      if (struct.isSetContentType()) {
        optionals.set(1);
      }
      if (struct.isSetUserAgent()) {
        optionals.set(2);
      }
      if (struct.isSetInReplyToList()) {
        optionals.set(3);
      }
      if (struct.isSetReferenceList()) {
        optionals.set(4);
      }
      if (struct.isSetSenderAddress()) {
        optionals.set(5);
      }
      if (struct.isSetReturnPathAddress()) {
        optionals.set(6);
      }
      if (struct.isSetToAddressList()) {
        optionals.set(7);
      }
      if (struct.isSetCcAddressList()) {
        optionals.set(8);
      }
      if (struct.isSetBccAddressList()) {
        optionals.set(9);
      }
      if (struct.isSetEmailFolder()) {
        optionals.set(10);
      }
      if (struct.isSetSubject()) {
        optionals.set(11);
      }
      if (struct.isSetQuotedAddresses()) {
        optionals.set(12);
      }
      if (struct.isSetAttachmentPaths()) {
        optionals.set(13);
      }
      if (struct.isSetSalutation()) {
        optionals.set(14);
      }
      if (struct.isSetSignature()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetMessageId()) {
        oprot.writeString(struct.messageId);
      }
      if (struct.isSetContentType()) {
        oprot.writeString(struct.contentType);
      }
      if (struct.isSetUserAgent()) {
        oprot.writeString(struct.userAgent);
      }
      if (struct.isSetInReplyToList()) {
        {
          oprot.writeI32(struct.inReplyToList.size());
          for (java.lang.String _iter28 : struct.inReplyToList)
          {
            oprot.writeString(_iter28);
          }
        }
      }
      if (struct.isSetReferenceList()) {
        {
          oprot.writeI32(struct.referenceList.size());
          for (java.lang.String _iter29 : struct.referenceList)
          {
            oprot.writeString(_iter29);
          }
        }
      }
      if (struct.isSetSenderAddress()) {
        struct.senderAddress.write(oprot);
      }
      if (struct.isSetReturnPathAddress()) {
        struct.returnPathAddress.write(oprot);
      }
      if (struct.isSetToAddressList()) {
        {
          oprot.writeI32(struct.toAddressList.size());
          for (EmailAddress _iter30 : struct.toAddressList)
          {
            _iter30.write(oprot);
          }
        }
      }
      if (struct.isSetCcAddressList()) {
        {
          oprot.writeI32(struct.ccAddressList.size());
          for (EmailAddress _iter31 : struct.ccAddressList)
          {
            _iter31.write(oprot);
          }
        }
      }
      if (struct.isSetBccAddressList()) {
        {
          oprot.writeI32(struct.bccAddressList.size());
          for (EmailAddress _iter32 : struct.bccAddressList)
          {
            _iter32.write(oprot);
          }
        }
      }
      if (struct.isSetEmailFolder()) {
        oprot.writeString(struct.emailFolder);
      }
      if (struct.isSetSubject()) {
        oprot.writeString(struct.subject);
      }
      if (struct.isSetQuotedAddresses()) {
        {
          oprot.writeI32(struct.quotedAddresses.size());
          for (java.lang.String _iter33 : struct.quotedAddresses)
          {
            oprot.writeString(_iter33);
          }
        }
      }
      if (struct.isSetAttachmentPaths()) {
        {
          oprot.writeI32(struct.attachmentPaths.size());
          for (java.lang.String _iter34 : struct.attachmentPaths)
          {
            oprot.writeString(_iter34);
          }
        }
      }
      if (struct.isSetSalutation()) {
        oprot.writeString(struct.salutation);
      }
      if (struct.isSetSignature()) {
        oprot.writeString(struct.signature);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EmailCommunicationInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.messageId = iprot.readString();
        struct.setMessageIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.contentType = iprot.readString();
        struct.setContentTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.userAgent = iprot.readString();
        struct.setUserAgentIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list35 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.inReplyToList = new java.util.ArrayList<java.lang.String>(_list35.size);
          java.lang.String _elem36;
          for (int _i37 = 0; _i37 < _list35.size; ++_i37)
          {
            _elem36 = iprot.readString();
            struct.inReplyToList.add(_elem36);
          }
        }
        struct.setInReplyToListIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list38 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.referenceList = new java.util.ArrayList<java.lang.String>(_list38.size);
          java.lang.String _elem39;
          for (int _i40 = 0; _i40 < _list38.size; ++_i40)
          {
            _elem39 = iprot.readString();
            struct.referenceList.add(_elem39);
          }
        }
        struct.setReferenceListIsSet(true);
      }
      if (incoming.get(5)) {
        struct.senderAddress = new EmailAddress();
        struct.senderAddress.read(iprot);
        struct.setSenderAddressIsSet(true);
      }
      if (incoming.get(6)) {
        struct.returnPathAddress = new EmailAddress();
        struct.returnPathAddress.read(iprot);
        struct.setReturnPathAddressIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list41 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.toAddressList = new java.util.ArrayList<EmailAddress>(_list41.size);
          EmailAddress _elem42;
          for (int _i43 = 0; _i43 < _list41.size; ++_i43)
          {
            _elem42 = new EmailAddress();
            _elem42.read(iprot);
            struct.toAddressList.add(_elem42);
          }
        }
        struct.setToAddressListIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list44 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.ccAddressList = new java.util.ArrayList<EmailAddress>(_list44.size);
          EmailAddress _elem45;
          for (int _i46 = 0; _i46 < _list44.size; ++_i46)
          {
            _elem45 = new EmailAddress();
            _elem45.read(iprot);
            struct.ccAddressList.add(_elem45);
          }
        }
        struct.setCcAddressListIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list47 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.bccAddressList = new java.util.ArrayList<EmailAddress>(_list47.size);
          EmailAddress _elem48;
          for (int _i49 = 0; _i49 < _list47.size; ++_i49)
          {
            _elem48 = new EmailAddress();
            _elem48.read(iprot);
            struct.bccAddressList.add(_elem48);
          }
        }
        struct.setBccAddressListIsSet(true);
      }
      if (incoming.get(10)) {
        struct.emailFolder = iprot.readString();
        struct.setEmailFolderIsSet(true);
      }
      if (incoming.get(11)) {
        struct.subject = iprot.readString();
        struct.setSubjectIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TList _list50 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.quotedAddresses = new java.util.ArrayList<java.lang.String>(_list50.size);
          java.lang.String _elem51;
          for (int _i52 = 0; _i52 < _list50.size; ++_i52)
          {
            _elem51 = iprot.readString();
            struct.quotedAddresses.add(_elem51);
          }
        }
        struct.setQuotedAddressesIsSet(true);
      }
      if (incoming.get(13)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.attachmentPaths = new java.util.ArrayList<java.lang.String>(_list53.size);
          java.lang.String _elem54;
          for (int _i55 = 0; _i55 < _list53.size; ++_i55)
          {
            _elem54 = iprot.readString();
            struct.attachmentPaths.add(_elem54);
          }
        }
        struct.setAttachmentPathsIsSet(true);
      }
      if (incoming.get(14)) {
        struct.salutation = iprot.readString();
        struct.setSalutationIsSet(true);
      }
      if (incoming.get(15)) {
        struct.signature = iprot.readString();
        struct.setSignatureIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}


/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package edu.jhu.hlt.concrete;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * A structure that represents a collection of Communications.
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-01-04")
public class CommunicationSet implements org.apache.thrift.TBase<CommunicationSet, CommunicationSet._Fields>, java.io.Serializable, Cloneable, Comparable<CommunicationSet> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CommunicationSet");

  private static final org.apache.thrift.protocol.TField COMMUNICATION_ID_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("communicationIdList", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField CORPUS_FIELD_DESC = new org.apache.thrift.protocol.TField("corpus", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ENTITY_MENTION_CLUSTER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("entityMentionClusterList", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField ENTITY_CLUSTER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("entityClusterList", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField SITUATION_MENTION_CLUSTER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("situationMentionClusterList", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField SITUATION_CLUSTER_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("situationClusterList", org.apache.thrift.protocol.TType.LIST, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CommunicationSetStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CommunicationSetTupleSchemeFactory());
  }

  private List<edu.jhu.hlt.concrete.UUID> communicationIdList; // optional
  private String corpus; // optional
  private List<edu.jhu.hlt.concrete.Clustering> entityMentionClusterList; // optional
  private List<edu.jhu.hlt.concrete.Clustering> entityClusterList; // optional
  private List<edu.jhu.hlt.concrete.Clustering> situationMentionClusterList; // optional
  private List<edu.jhu.hlt.concrete.Clustering> situationClusterList; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * A list of Communication UUIDs that this CommunicationSet
     * represents.
     * 
     * This field may be absent if this CommunicationSet represents
     * a large corpus. If absent, 'corpus' field should be present.
     */
    COMMUNICATION_ID_LIST((short)1, "communicationIdList"),
    /**
     * The name of a corpus or other document body that this
     * CommunicationSet represents.
     * 
     * Should be present if 'communicationIdList' is absent.
     */
    CORPUS((short)2, "corpus"),
    /**
     * A list of Clustering objects that represent a
     * group of EntityMentions that are a part of this
     * CommunicationSet.
     */
    ENTITY_MENTION_CLUSTER_LIST((short)3, "entityMentionClusterList"),
    /**
     * A list of Clustering objects that represent a
     * group of Entities that are a part of this
     * CommunicationSet.
     */
    ENTITY_CLUSTER_LIST((short)4, "entityClusterList"),
    /**
     * A list of Clustering objects that represent a
     * group of SituationMentions that are a part of this
     * CommunicationSet.
     */
    SITUATION_MENTION_CLUSTER_LIST((short)5, "situationMentionClusterList"),
    /**
     * A list of Clustering objects that represent a
     * group of Situations that are a part of this
     * CommunicationSet.
     */
    SITUATION_CLUSTER_LIST((short)6, "situationClusterList");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // COMMUNICATION_ID_LIST
          return COMMUNICATION_ID_LIST;
        case 2: // CORPUS
          return CORPUS;
        case 3: // ENTITY_MENTION_CLUSTER_LIST
          return ENTITY_MENTION_CLUSTER_LIST;
        case 4: // ENTITY_CLUSTER_LIST
          return ENTITY_CLUSTER_LIST;
        case 5: // SITUATION_MENTION_CLUSTER_LIST
          return SITUATION_MENTION_CLUSTER_LIST;
        case 6: // SITUATION_CLUSTER_LIST
          return SITUATION_CLUSTER_LIST;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.COMMUNICATION_ID_LIST,_Fields.CORPUS,_Fields.ENTITY_MENTION_CLUSTER_LIST,_Fields.ENTITY_CLUSTER_LIST,_Fields.SITUATION_MENTION_CLUSTER_LIST,_Fields.SITUATION_CLUSTER_LIST};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.COMMUNICATION_ID_LIST, new org.apache.thrift.meta_data.FieldMetaData("communicationIdList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, edu.jhu.hlt.concrete.UUID.class))));
    tmpMap.put(_Fields.CORPUS, new org.apache.thrift.meta_data.FieldMetaData("corpus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENTITY_MENTION_CLUSTER_LIST, new org.apache.thrift.meta_data.FieldMetaData("entityMentionClusterList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, edu.jhu.hlt.concrete.Clustering.class))));
    tmpMap.put(_Fields.ENTITY_CLUSTER_LIST, new org.apache.thrift.meta_data.FieldMetaData("entityClusterList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, edu.jhu.hlt.concrete.Clustering.class))));
    tmpMap.put(_Fields.SITUATION_MENTION_CLUSTER_LIST, new org.apache.thrift.meta_data.FieldMetaData("situationMentionClusterList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, edu.jhu.hlt.concrete.Clustering.class))));
    tmpMap.put(_Fields.SITUATION_CLUSTER_LIST, new org.apache.thrift.meta_data.FieldMetaData("situationClusterList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, edu.jhu.hlt.concrete.Clustering.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CommunicationSet.class, metaDataMap);
  }

  public CommunicationSet() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CommunicationSet(CommunicationSet other) {
    if (other.isSetCommunicationIdList()) {
      List<edu.jhu.hlt.concrete.UUID> __this__communicationIdList = new ArrayList<edu.jhu.hlt.concrete.UUID>(other.communicationIdList.size());
      for (edu.jhu.hlt.concrete.UUID other_element : other.communicationIdList) {
        __this__communicationIdList.add(new edu.jhu.hlt.concrete.UUID(other_element));
      }
      this.communicationIdList = __this__communicationIdList;
    }
    if (other.isSetCorpus()) {
      this.corpus = other.corpus;
    }
    if (other.isSetEntityMentionClusterList()) {
      List<edu.jhu.hlt.concrete.Clustering> __this__entityMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(other.entityMentionClusterList.size());
      for (edu.jhu.hlt.concrete.Clustering other_element : other.entityMentionClusterList) {
        __this__entityMentionClusterList.add(new edu.jhu.hlt.concrete.Clustering(other_element));
      }
      this.entityMentionClusterList = __this__entityMentionClusterList;
    }
    if (other.isSetEntityClusterList()) {
      List<edu.jhu.hlt.concrete.Clustering> __this__entityClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(other.entityClusterList.size());
      for (edu.jhu.hlt.concrete.Clustering other_element : other.entityClusterList) {
        __this__entityClusterList.add(new edu.jhu.hlt.concrete.Clustering(other_element));
      }
      this.entityClusterList = __this__entityClusterList;
    }
    if (other.isSetSituationMentionClusterList()) {
      List<edu.jhu.hlt.concrete.Clustering> __this__situationMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(other.situationMentionClusterList.size());
      for (edu.jhu.hlt.concrete.Clustering other_element : other.situationMentionClusterList) {
        __this__situationMentionClusterList.add(new edu.jhu.hlt.concrete.Clustering(other_element));
      }
      this.situationMentionClusterList = __this__situationMentionClusterList;
    }
    if (other.isSetSituationClusterList()) {
      List<edu.jhu.hlt.concrete.Clustering> __this__situationClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(other.situationClusterList.size());
      for (edu.jhu.hlt.concrete.Clustering other_element : other.situationClusterList) {
        __this__situationClusterList.add(new edu.jhu.hlt.concrete.Clustering(other_element));
      }
      this.situationClusterList = __this__situationClusterList;
    }
  }

  public CommunicationSet deepCopy() {
    return new CommunicationSet(this);
  }

  @Override
  public void clear() {
    this.communicationIdList = null;
    this.corpus = null;
    this.entityMentionClusterList = null;
    this.entityClusterList = null;
    this.situationMentionClusterList = null;
    this.situationClusterList = null;
  }

  public int getCommunicationIdListSize() {
    return (this.communicationIdList == null) ? 0 : this.communicationIdList.size();
  }

  public java.util.Iterator<edu.jhu.hlt.concrete.UUID> getCommunicationIdListIterator() {
    return (this.communicationIdList == null) ? null : this.communicationIdList.iterator();
  }

  public void addToCommunicationIdList(edu.jhu.hlt.concrete.UUID elem) {
    if (this.communicationIdList == null) {
      this.communicationIdList = new ArrayList<edu.jhu.hlt.concrete.UUID>();
    }
    this.communicationIdList.add(elem);
  }

  /**
   * A list of Communication UUIDs that this CommunicationSet
   * represents.
   * 
   * This field may be absent if this CommunicationSet represents
   * a large corpus. If absent, 'corpus' field should be present.
   */
  public List<edu.jhu.hlt.concrete.UUID> getCommunicationIdList() {
    return this.communicationIdList;
  }

  /**
   * A list of Communication UUIDs that this CommunicationSet
   * represents.
   * 
   * This field may be absent if this CommunicationSet represents
   * a large corpus. If absent, 'corpus' field should be present.
   */
  public CommunicationSet setCommunicationIdList(List<edu.jhu.hlt.concrete.UUID> communicationIdList) {
    this.communicationIdList = communicationIdList;
    return this;
  }

  public void unsetCommunicationIdList() {
    this.communicationIdList = null;
  }

  /** Returns true if field communicationIdList is set (has been assigned a value) and false otherwise */
  public boolean isSetCommunicationIdList() {
    return this.communicationIdList != null;
  }

  public void setCommunicationIdListIsSet(boolean value) {
    if (!value) {
      this.communicationIdList = null;
    }
  }

  /**
   * The name of a corpus or other document body that this
   * CommunicationSet represents.
   * 
   * Should be present if 'communicationIdList' is absent.
   */
  public String getCorpus() {
    return this.corpus;
  }

  /**
   * The name of a corpus or other document body that this
   * CommunicationSet represents.
   * 
   * Should be present if 'communicationIdList' is absent.
   */
  public CommunicationSet setCorpus(String corpus) {
    this.corpus = corpus;
    return this;
  }

  public void unsetCorpus() {
    this.corpus = null;
  }

  /** Returns true if field corpus is set (has been assigned a value) and false otherwise */
  public boolean isSetCorpus() {
    return this.corpus != null;
  }

  public void setCorpusIsSet(boolean value) {
    if (!value) {
      this.corpus = null;
    }
  }

  public int getEntityMentionClusterListSize() {
    return (this.entityMentionClusterList == null) ? 0 : this.entityMentionClusterList.size();
  }

  public java.util.Iterator<edu.jhu.hlt.concrete.Clustering> getEntityMentionClusterListIterator() {
    return (this.entityMentionClusterList == null) ? null : this.entityMentionClusterList.iterator();
  }

  public void addToEntityMentionClusterList(edu.jhu.hlt.concrete.Clustering elem) {
    if (this.entityMentionClusterList == null) {
      this.entityMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>();
    }
    this.entityMentionClusterList.add(elem);
  }

  /**
   * A list of Clustering objects that represent a
   * group of EntityMentions that are a part of this
   * CommunicationSet.
   */
  public List<edu.jhu.hlt.concrete.Clustering> getEntityMentionClusterList() {
    return this.entityMentionClusterList;
  }

  /**
   * A list of Clustering objects that represent a
   * group of EntityMentions that are a part of this
   * CommunicationSet.
   */
  public CommunicationSet setEntityMentionClusterList(List<edu.jhu.hlt.concrete.Clustering> entityMentionClusterList) {
    this.entityMentionClusterList = entityMentionClusterList;
    return this;
  }

  public void unsetEntityMentionClusterList() {
    this.entityMentionClusterList = null;
  }

  /** Returns true if field entityMentionClusterList is set (has been assigned a value) and false otherwise */
  public boolean isSetEntityMentionClusterList() {
    return this.entityMentionClusterList != null;
  }

  public void setEntityMentionClusterListIsSet(boolean value) {
    if (!value) {
      this.entityMentionClusterList = null;
    }
  }

  public int getEntityClusterListSize() {
    return (this.entityClusterList == null) ? 0 : this.entityClusterList.size();
  }

  public java.util.Iterator<edu.jhu.hlt.concrete.Clustering> getEntityClusterListIterator() {
    return (this.entityClusterList == null) ? null : this.entityClusterList.iterator();
  }

  public void addToEntityClusterList(edu.jhu.hlt.concrete.Clustering elem) {
    if (this.entityClusterList == null) {
      this.entityClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>();
    }
    this.entityClusterList.add(elem);
  }

  /**
   * A list of Clustering objects that represent a
   * group of Entities that are a part of this
   * CommunicationSet.
   */
  public List<edu.jhu.hlt.concrete.Clustering> getEntityClusterList() {
    return this.entityClusterList;
  }

  /**
   * A list of Clustering objects that represent a
   * group of Entities that are a part of this
   * CommunicationSet.
   */
  public CommunicationSet setEntityClusterList(List<edu.jhu.hlt.concrete.Clustering> entityClusterList) {
    this.entityClusterList = entityClusterList;
    return this;
  }

  public void unsetEntityClusterList() {
    this.entityClusterList = null;
  }

  /** Returns true if field entityClusterList is set (has been assigned a value) and false otherwise */
  public boolean isSetEntityClusterList() {
    return this.entityClusterList != null;
  }

  public void setEntityClusterListIsSet(boolean value) {
    if (!value) {
      this.entityClusterList = null;
    }
  }

  public int getSituationMentionClusterListSize() {
    return (this.situationMentionClusterList == null) ? 0 : this.situationMentionClusterList.size();
  }

  public java.util.Iterator<edu.jhu.hlt.concrete.Clustering> getSituationMentionClusterListIterator() {
    return (this.situationMentionClusterList == null) ? null : this.situationMentionClusterList.iterator();
  }

  public void addToSituationMentionClusterList(edu.jhu.hlt.concrete.Clustering elem) {
    if (this.situationMentionClusterList == null) {
      this.situationMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>();
    }
    this.situationMentionClusterList.add(elem);
  }

  /**
   * A list of Clustering objects that represent a
   * group of SituationMentions that are a part of this
   * CommunicationSet.
   */
  public List<edu.jhu.hlt.concrete.Clustering> getSituationMentionClusterList() {
    return this.situationMentionClusterList;
  }

  /**
   * A list of Clustering objects that represent a
   * group of SituationMentions that are a part of this
   * CommunicationSet.
   */
  public CommunicationSet setSituationMentionClusterList(List<edu.jhu.hlt.concrete.Clustering> situationMentionClusterList) {
    this.situationMentionClusterList = situationMentionClusterList;
    return this;
  }

  public void unsetSituationMentionClusterList() {
    this.situationMentionClusterList = null;
  }

  /** Returns true if field situationMentionClusterList is set (has been assigned a value) and false otherwise */
  public boolean isSetSituationMentionClusterList() {
    return this.situationMentionClusterList != null;
  }

  public void setSituationMentionClusterListIsSet(boolean value) {
    if (!value) {
      this.situationMentionClusterList = null;
    }
  }

  public int getSituationClusterListSize() {
    return (this.situationClusterList == null) ? 0 : this.situationClusterList.size();
  }

  public java.util.Iterator<edu.jhu.hlt.concrete.Clustering> getSituationClusterListIterator() {
    return (this.situationClusterList == null) ? null : this.situationClusterList.iterator();
  }

  public void addToSituationClusterList(edu.jhu.hlt.concrete.Clustering elem) {
    if (this.situationClusterList == null) {
      this.situationClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>();
    }
    this.situationClusterList.add(elem);
  }

  /**
   * A list of Clustering objects that represent a
   * group of Situations that are a part of this
   * CommunicationSet.
   */
  public List<edu.jhu.hlt.concrete.Clustering> getSituationClusterList() {
    return this.situationClusterList;
  }

  /**
   * A list of Clustering objects that represent a
   * group of Situations that are a part of this
   * CommunicationSet.
   */
  public CommunicationSet setSituationClusterList(List<edu.jhu.hlt.concrete.Clustering> situationClusterList) {
    this.situationClusterList = situationClusterList;
    return this;
  }

  public void unsetSituationClusterList() {
    this.situationClusterList = null;
  }

  /** Returns true if field situationClusterList is set (has been assigned a value) and false otherwise */
  public boolean isSetSituationClusterList() {
    return this.situationClusterList != null;
  }

  public void setSituationClusterListIsSet(boolean value) {
    if (!value) {
      this.situationClusterList = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case COMMUNICATION_ID_LIST:
      if (value == null) {
        unsetCommunicationIdList();
      } else {
        setCommunicationIdList((List<edu.jhu.hlt.concrete.UUID>)value);
      }
      break;

    case CORPUS:
      if (value == null) {
        unsetCorpus();
      } else {
        setCorpus((String)value);
      }
      break;

    case ENTITY_MENTION_CLUSTER_LIST:
      if (value == null) {
        unsetEntityMentionClusterList();
      } else {
        setEntityMentionClusterList((List<edu.jhu.hlt.concrete.Clustering>)value);
      }
      break;

    case ENTITY_CLUSTER_LIST:
      if (value == null) {
        unsetEntityClusterList();
      } else {
        setEntityClusterList((List<edu.jhu.hlt.concrete.Clustering>)value);
      }
      break;

    case SITUATION_MENTION_CLUSTER_LIST:
      if (value == null) {
        unsetSituationMentionClusterList();
      } else {
        setSituationMentionClusterList((List<edu.jhu.hlt.concrete.Clustering>)value);
      }
      break;

    case SITUATION_CLUSTER_LIST:
      if (value == null) {
        unsetSituationClusterList();
      } else {
        setSituationClusterList((List<edu.jhu.hlt.concrete.Clustering>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case COMMUNICATION_ID_LIST:
      return getCommunicationIdList();

    case CORPUS:
      return getCorpus();

    case ENTITY_MENTION_CLUSTER_LIST:
      return getEntityMentionClusterList();

    case ENTITY_CLUSTER_LIST:
      return getEntityClusterList();

    case SITUATION_MENTION_CLUSTER_LIST:
      return getSituationMentionClusterList();

    case SITUATION_CLUSTER_LIST:
      return getSituationClusterList();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case COMMUNICATION_ID_LIST:
      return isSetCommunicationIdList();
    case CORPUS:
      return isSetCorpus();
    case ENTITY_MENTION_CLUSTER_LIST:
      return isSetEntityMentionClusterList();
    case ENTITY_CLUSTER_LIST:
      return isSetEntityClusterList();
    case SITUATION_MENTION_CLUSTER_LIST:
      return isSetSituationMentionClusterList();
    case SITUATION_CLUSTER_LIST:
      return isSetSituationClusterList();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CommunicationSet)
      return this.equals((CommunicationSet)that);
    return false;
  }

  public boolean equals(CommunicationSet that) {
    if (that == null)
      return false;

    boolean this_present_communicationIdList = true && this.isSetCommunicationIdList();
    boolean that_present_communicationIdList = true && that.isSetCommunicationIdList();
    if (this_present_communicationIdList || that_present_communicationIdList) {
      if (!(this_present_communicationIdList && that_present_communicationIdList))
        return false;
      if (!this.communicationIdList.equals(that.communicationIdList))
        return false;
    }

    boolean this_present_corpus = true && this.isSetCorpus();
    boolean that_present_corpus = true && that.isSetCorpus();
    if (this_present_corpus || that_present_corpus) {
      if (!(this_present_corpus && that_present_corpus))
        return false;
      if (!this.corpus.equals(that.corpus))
        return false;
    }

    boolean this_present_entityMentionClusterList = true && this.isSetEntityMentionClusterList();
    boolean that_present_entityMentionClusterList = true && that.isSetEntityMentionClusterList();
    if (this_present_entityMentionClusterList || that_present_entityMentionClusterList) {
      if (!(this_present_entityMentionClusterList && that_present_entityMentionClusterList))
        return false;
      if (!this.entityMentionClusterList.equals(that.entityMentionClusterList))
        return false;
    }

    boolean this_present_entityClusterList = true && this.isSetEntityClusterList();
    boolean that_present_entityClusterList = true && that.isSetEntityClusterList();
    if (this_present_entityClusterList || that_present_entityClusterList) {
      if (!(this_present_entityClusterList && that_present_entityClusterList))
        return false;
      if (!this.entityClusterList.equals(that.entityClusterList))
        return false;
    }

    boolean this_present_situationMentionClusterList = true && this.isSetSituationMentionClusterList();
    boolean that_present_situationMentionClusterList = true && that.isSetSituationMentionClusterList();
    if (this_present_situationMentionClusterList || that_present_situationMentionClusterList) {
      if (!(this_present_situationMentionClusterList && that_present_situationMentionClusterList))
        return false;
      if (!this.situationMentionClusterList.equals(that.situationMentionClusterList))
        return false;
    }

    boolean this_present_situationClusterList = true && this.isSetSituationClusterList();
    boolean that_present_situationClusterList = true && that.isSetSituationClusterList();
    if (this_present_situationClusterList || that_present_situationClusterList) {
      if (!(this_present_situationClusterList && that_present_situationClusterList))
        return false;
      if (!this.situationClusterList.equals(that.situationClusterList))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_communicationIdList = true && (isSetCommunicationIdList());
    list.add(present_communicationIdList);
    if (present_communicationIdList)
      list.add(communicationIdList);

    boolean present_corpus = true && (isSetCorpus());
    list.add(present_corpus);
    if (present_corpus)
      list.add(corpus);

    boolean present_entityMentionClusterList = true && (isSetEntityMentionClusterList());
    list.add(present_entityMentionClusterList);
    if (present_entityMentionClusterList)
      list.add(entityMentionClusterList);

    boolean present_entityClusterList = true && (isSetEntityClusterList());
    list.add(present_entityClusterList);
    if (present_entityClusterList)
      list.add(entityClusterList);

    boolean present_situationMentionClusterList = true && (isSetSituationMentionClusterList());
    list.add(present_situationMentionClusterList);
    if (present_situationMentionClusterList)
      list.add(situationMentionClusterList);

    boolean present_situationClusterList = true && (isSetSituationClusterList());
    list.add(present_situationClusterList);
    if (present_situationClusterList)
      list.add(situationClusterList);

    return list.hashCode();
  }

  @Override
  public int compareTo(CommunicationSet other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCommunicationIdList()).compareTo(other.isSetCommunicationIdList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommunicationIdList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.communicationIdList, other.communicationIdList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCorpus()).compareTo(other.isSetCorpus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCorpus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.corpus, other.corpus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEntityMentionClusterList()).compareTo(other.isSetEntityMentionClusterList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntityMentionClusterList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entityMentionClusterList, other.entityMentionClusterList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEntityClusterList()).compareTo(other.isSetEntityClusterList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntityClusterList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.entityClusterList, other.entityClusterList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSituationMentionClusterList()).compareTo(other.isSetSituationMentionClusterList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSituationMentionClusterList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.situationMentionClusterList, other.situationMentionClusterList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSituationClusterList()).compareTo(other.isSetSituationClusterList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSituationClusterList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.situationClusterList, other.situationClusterList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CommunicationSet(");
    boolean first = true;

    if (isSetCommunicationIdList()) {
      sb.append("communicationIdList:");
      if (this.communicationIdList == null) {
        sb.append("null");
      } else {
        sb.append(this.communicationIdList);
      }
      first = false;
    }
    if (isSetCorpus()) {
      if (!first) sb.append(", ");
      sb.append("corpus:");
      if (this.corpus == null) {
        sb.append("null");
      } else {
        sb.append(this.corpus);
      }
      first = false;
    }
    if (isSetEntityMentionClusterList()) {
      if (!first) sb.append(", ");
      sb.append("entityMentionClusterList:");
      if (this.entityMentionClusterList == null) {
        sb.append("null");
      } else {
        sb.append(this.entityMentionClusterList);
      }
      first = false;
    }
    if (isSetEntityClusterList()) {
      if (!first) sb.append(", ");
      sb.append("entityClusterList:");
      if (this.entityClusterList == null) {
        sb.append("null");
      } else {
        sb.append(this.entityClusterList);
      }
      first = false;
    }
    if (isSetSituationMentionClusterList()) {
      if (!first) sb.append(", ");
      sb.append("situationMentionClusterList:");
      if (this.situationMentionClusterList == null) {
        sb.append("null");
      } else {
        sb.append(this.situationMentionClusterList);
      }
      first = false;
    }
    if (isSetSituationClusterList()) {
      if (!first) sb.append(", ");
      sb.append("situationClusterList:");
      if (this.situationClusterList == null) {
        sb.append("null");
      } else {
        sb.append(this.situationClusterList);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CommunicationSetStandardSchemeFactory implements SchemeFactory {
    public CommunicationSetStandardScheme getScheme() {
      return new CommunicationSetStandardScheme();
    }
  }

  private static class CommunicationSetStandardScheme extends StandardScheme<CommunicationSet> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CommunicationSet struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // COMMUNICATION_ID_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list82 = iprot.readListBegin();
                struct.communicationIdList = new ArrayList<edu.jhu.hlt.concrete.UUID>(_list82.size);
                edu.jhu.hlt.concrete.UUID _elem83;
                for (int _i84 = 0; _i84 < _list82.size; ++_i84)
                {
                  _elem83 = new edu.jhu.hlt.concrete.UUID();
                  _elem83.read(iprot);
                  struct.communicationIdList.add(_elem83);
                }
                iprot.readListEnd();
              }
              struct.setCommunicationIdListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CORPUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.corpus = iprot.readString();
              struct.setCorpusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ENTITY_MENTION_CLUSTER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list85 = iprot.readListBegin();
                struct.entityMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list85.size);
                edu.jhu.hlt.concrete.Clustering _elem86;
                for (int _i87 = 0; _i87 < _list85.size; ++_i87)
                {
                  _elem86 = new edu.jhu.hlt.concrete.Clustering();
                  _elem86.read(iprot);
                  struct.entityMentionClusterList.add(_elem86);
                }
                iprot.readListEnd();
              }
              struct.setEntityMentionClusterListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ENTITY_CLUSTER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list88 = iprot.readListBegin();
                struct.entityClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list88.size);
                edu.jhu.hlt.concrete.Clustering _elem89;
                for (int _i90 = 0; _i90 < _list88.size; ++_i90)
                {
                  _elem89 = new edu.jhu.hlt.concrete.Clustering();
                  _elem89.read(iprot);
                  struct.entityClusterList.add(_elem89);
                }
                iprot.readListEnd();
              }
              struct.setEntityClusterListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SITUATION_MENTION_CLUSTER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list91 = iprot.readListBegin();
                struct.situationMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list91.size);
                edu.jhu.hlt.concrete.Clustering _elem92;
                for (int _i93 = 0; _i93 < _list91.size; ++_i93)
                {
                  _elem92 = new edu.jhu.hlt.concrete.Clustering();
                  _elem92.read(iprot);
                  struct.situationMentionClusterList.add(_elem92);
                }
                iprot.readListEnd();
              }
              struct.setSituationMentionClusterListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SITUATION_CLUSTER_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list94 = iprot.readListBegin();
                struct.situationClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list94.size);
                edu.jhu.hlt.concrete.Clustering _elem95;
                for (int _i96 = 0; _i96 < _list94.size; ++_i96)
                {
                  _elem95 = new edu.jhu.hlt.concrete.Clustering();
                  _elem95.read(iprot);
                  struct.situationClusterList.add(_elem95);
                }
                iprot.readListEnd();
              }
              struct.setSituationClusterListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CommunicationSet struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.communicationIdList != null) {
        if (struct.isSetCommunicationIdList()) {
          oprot.writeFieldBegin(COMMUNICATION_ID_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.communicationIdList.size()));
            for (edu.jhu.hlt.concrete.UUID _iter97 : struct.communicationIdList)
            {
              _iter97.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.corpus != null) {
        if (struct.isSetCorpus()) {
          oprot.writeFieldBegin(CORPUS_FIELD_DESC);
          oprot.writeString(struct.corpus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.entityMentionClusterList != null) {
        if (struct.isSetEntityMentionClusterList()) {
          oprot.writeFieldBegin(ENTITY_MENTION_CLUSTER_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.entityMentionClusterList.size()));
            for (edu.jhu.hlt.concrete.Clustering _iter98 : struct.entityMentionClusterList)
            {
              _iter98.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.entityClusterList != null) {
        if (struct.isSetEntityClusterList()) {
          oprot.writeFieldBegin(ENTITY_CLUSTER_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.entityClusterList.size()));
            for (edu.jhu.hlt.concrete.Clustering _iter99 : struct.entityClusterList)
            {
              _iter99.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.situationMentionClusterList != null) {
        if (struct.isSetSituationMentionClusterList()) {
          oprot.writeFieldBegin(SITUATION_MENTION_CLUSTER_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.situationMentionClusterList.size()));
            for (edu.jhu.hlt.concrete.Clustering _iter100 : struct.situationMentionClusterList)
            {
              _iter100.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.situationClusterList != null) {
        if (struct.isSetSituationClusterList()) {
          oprot.writeFieldBegin(SITUATION_CLUSTER_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.situationClusterList.size()));
            for (edu.jhu.hlt.concrete.Clustering _iter101 : struct.situationClusterList)
            {
              _iter101.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CommunicationSetTupleSchemeFactory implements SchemeFactory {
    public CommunicationSetTupleScheme getScheme() {
      return new CommunicationSetTupleScheme();
    }
  }

  private static class CommunicationSetTupleScheme extends TupleScheme<CommunicationSet> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CommunicationSet struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCommunicationIdList()) {
        optionals.set(0);
      }
      if (struct.isSetCorpus()) {
        optionals.set(1);
      }
      if (struct.isSetEntityMentionClusterList()) {
        optionals.set(2);
      }
      if (struct.isSetEntityClusterList()) {
        optionals.set(3);
      }
      if (struct.isSetSituationMentionClusterList()) {
        optionals.set(4);
      }
      if (struct.isSetSituationClusterList()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetCommunicationIdList()) {
        {
          oprot.writeI32(struct.communicationIdList.size());
          for (edu.jhu.hlt.concrete.UUID _iter102 : struct.communicationIdList)
          {
            _iter102.write(oprot);
          }
        }
      }
      if (struct.isSetCorpus()) {
        oprot.writeString(struct.corpus);
      }
      if (struct.isSetEntityMentionClusterList()) {
        {
          oprot.writeI32(struct.entityMentionClusterList.size());
          for (edu.jhu.hlt.concrete.Clustering _iter103 : struct.entityMentionClusterList)
          {
            _iter103.write(oprot);
          }
        }
      }
      if (struct.isSetEntityClusterList()) {
        {
          oprot.writeI32(struct.entityClusterList.size());
          for (edu.jhu.hlt.concrete.Clustering _iter104 : struct.entityClusterList)
          {
            _iter104.write(oprot);
          }
        }
      }
      if (struct.isSetSituationMentionClusterList()) {
        {
          oprot.writeI32(struct.situationMentionClusterList.size());
          for (edu.jhu.hlt.concrete.Clustering _iter105 : struct.situationMentionClusterList)
          {
            _iter105.write(oprot);
          }
        }
      }
      if (struct.isSetSituationClusterList()) {
        {
          oprot.writeI32(struct.situationClusterList.size());
          for (edu.jhu.hlt.concrete.Clustering _iter106 : struct.situationClusterList)
          {
            _iter106.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CommunicationSet struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list107 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.communicationIdList = new ArrayList<edu.jhu.hlt.concrete.UUID>(_list107.size);
          edu.jhu.hlt.concrete.UUID _elem108;
          for (int _i109 = 0; _i109 < _list107.size; ++_i109)
          {
            _elem108 = new edu.jhu.hlt.concrete.UUID();
            _elem108.read(iprot);
            struct.communicationIdList.add(_elem108);
          }
        }
        struct.setCommunicationIdListIsSet(true);
      }
      if (incoming.get(1)) {
        struct.corpus = iprot.readString();
        struct.setCorpusIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list110 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.entityMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list110.size);
          edu.jhu.hlt.concrete.Clustering _elem111;
          for (int _i112 = 0; _i112 < _list110.size; ++_i112)
          {
            _elem111 = new edu.jhu.hlt.concrete.Clustering();
            _elem111.read(iprot);
            struct.entityMentionClusterList.add(_elem111);
          }
        }
        struct.setEntityMentionClusterListIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list113 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.entityClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list113.size);
          edu.jhu.hlt.concrete.Clustering _elem114;
          for (int _i115 = 0; _i115 < _list113.size; ++_i115)
          {
            _elem114 = new edu.jhu.hlt.concrete.Clustering();
            _elem114.read(iprot);
            struct.entityClusterList.add(_elem114);
          }
        }
        struct.setEntityClusterListIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list116 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.situationMentionClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list116.size);
          edu.jhu.hlt.concrete.Clustering _elem117;
          for (int _i118 = 0; _i118 < _list116.size; ++_i118)
          {
            _elem117 = new edu.jhu.hlt.concrete.Clustering();
            _elem117.read(iprot);
            struct.situationMentionClusterList.add(_elem117);
          }
        }
        struct.setSituationMentionClusterListIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TList _list119 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.situationClusterList = new ArrayList<edu.jhu.hlt.concrete.Clustering>(_list119.size);
          edu.jhu.hlt.concrete.Clustering _elem120;
          for (int _i121 = 0; _i121 < _list119.size; ++_i121)
          {
            _elem120 = new edu.jhu.hlt.concrete.Clustering();
            _elem120.read(iprot);
            struct.situationClusterList.add(_elem120);
          }
        }
        struct.setSituationClusterListIsSet(true);
      }
    }
  }

}

